{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","urlPattern","state","titleError","imgUrlError","imdbUrlError","imdbIdError","handleTitleChange","event","setState","target","value","handleDescriptionChange","handleImgUrlChange","handleImdbUrlChange","handleImdbIdChange","formReset","validateTitle","trim","validateImgUrl","test","validateImdbId","validateImdbUrl","handleSubmit","preventDefault","newMovie","props","onAdd","this","onSubmit","type","onChange","onBlur","classNames","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d9fa27a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  // eslint-disable-next-line max-len\n  urlPattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: '',\n    imgUrlError: '',\n    imdbUrlError: '',\n    imdbIdError: '',\n  };\n\n  handleTitleChange = (event) => {\n    this.setState({\n      title: event.target.value,\n      titleError: '',\n    });\n  }\n\n  handleDescriptionChange = (event) => {\n    this.setState({\n      description: event.target.value,\n    });\n  }\n\n  handleImgUrlChange = (event) => {\n    this.setState({\n      imgUrl: event.target.value,\n      imgUrlError: '',\n    });\n  }\n\n  handleImdbUrlChange = (event) => {\n    this.setState({\n      imdbUrl: event.target.value,\n      imdbUrlError: '',\n    });\n  }\n\n  handleImdbIdChange = (event) => {\n    this.setState({\n      imdbId: event.target.value,\n      imdbIdError: '',\n    });\n  }\n\n  formReset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  validateTitle = () => {\n    const { title } = this.state;\n    let titleError = '';\n\n    if (!title.trim()) {\n      titleError = 'Enter the title, please';\n    }\n\n    if (titleError) {\n      this.setState({ titleError });\n\n      return false;\n    }\n\n    return true;\n  }\n\n  validateImgUrl = () => {\n    const { imgUrl } = this.state;\n    let imgUrlError = '';\n\n    if (!this.urlPattern.test(imgUrl)) {\n      imgUrlError = 'Enter valid img URL, please';\n    }\n\n    if (imgUrlError) {\n      this.setState({ imgUrlError });\n\n      return false;\n    }\n\n    return true;\n  }\n\n  validateImdbId = () => {\n    const { imdbId } = this.state;\n    let imdbIdError = '';\n\n    if (!imdbId.trim()) {\n      imdbIdError = 'Enter movie ID, please';\n    }\n\n    if (imdbIdError) {\n      this.setState({ imdbIdError });\n\n      return false;\n    }\n\n    return true;\n  }\n\n  validateImdbUrl = () => {\n    const { imdbUrl } = this.state;\n    let imdbUrlError = '';\n\n    if (!this.urlPattern.test(imdbUrl)) {\n      imdbUrlError = 'Enter valid imdb URL, please';\n    }\n\n    if (imdbUrlError) {\n      this.setState({ imdbUrlError });\n\n      return false;\n    }\n\n    return true;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const isValid = this.validateTitle()\n      && this.validateImgUrl()\n      && this.validateImdbUrl()\n      && this.validateImdbId();\n\n    if (!isValid) {\n      return;\n    }\n\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n\n    this.formReset();\n  }\n\n  render() {\n    const {\n      title, description, imgUrl, imdbUrl, imdbId,\n      titleError, imgUrlError, imdbUrlError, imdbIdError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"form\">\n        <label className=\"form__label\">\n          Title:\n          <br />\n          <input\n            type=\"text\"\n            value={title}\n            onChange={this.handleTitleChange}\n            onBlur={this.validateTitle}\n            className={classNames(\n              'form__input',\n              { 'form__input--error': titleError },\n            )}\n          />\n          {titleError && (\n            <span className=\"form__error-msg\">{titleError}</span>\n          )}\n        </label>\n        <label className=\"form__label\">\n          Description:\n          <br />\n          <textarea\n            value={description}\n            onChange={this.handleDescriptionChange}\n            className=\"form__textarea\"\n          />\n        </label>\n        <label className=\"form__label\">\n          Image URL:\n          <br />\n          <input\n            type=\"text\"\n            value={imgUrl}\n            onChange={this.handleImgUrlChange}\n            onBlur={this.validateImgUrl}\n            className={classNames(\n              'form__input',\n              { 'form__input--error': imgUrlError },\n            )}\n          />\n          {imgUrlError && (\n            <span className=\"form__error-msg\">{imgUrlError}</span>\n          )}\n        </label>\n        <label className=\"form__label\">\n          imdb URL:\n          <br />\n          <input\n            type=\"text\"\n            value={imdbUrl}\n            onChange={this.handleImdbUrlChange}\n            onBlur={this.validateImdbUrl}\n            className={classNames(\n              'form__input',\n              { 'form__input--error': imdbUrlError },\n            )}\n          />\n          {imdbUrlError && (\n            <span className=\"form__error-msg\">{imdbUrlError}</span>\n          )}\n        </label>\n        <label className=\"form__label\">\n          imdb ID:\n          <br />\n          <input\n            type=\"text\"\n            value={imdbId}\n            onChange={this.handleImdbIdChange}\n            onBlur={this.validateImdbId}\n            className={classNames(\n              'form__input',\n              { 'form__input--error': imdbIdError },\n            )}\n          />\n          {imdbIdError && (\n            <span className=\"form__error-msg\">{imdbIdError}</span>\n          )}\n        </label>\n        <button\n          type=\"submit\"\n          className=\"form__button\"\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}